{
  "name": "openapi-to-normalizr",
  "description": "generator for normalizr",
  "version": "0.0.1",
  "author": {
    "name": "Eight",
    "url": "github.com/eightcard/openapi-to-normalizr"
  },
  "bin": {
    "openapi2models": "./bin/generatemodels",
    "openapi2schemas": "./bin/generateschemas"
  },
  "dependencies": {
    "commander": "2.15.1",
    "js-yaml": "3.11.0",
    "lodash": "4.17.10",
    "mkdirp": "0.5.1",
    "mustache": "2.3.0",
    "swagger-client": "3.8.2"
  },
  "devDependencies": {
    "@babel/cli": "7.0.0-rc.1",
    "@babel/core": "7.0.0-rc.1",
    "@babel/preset-env": "7.0.0-rc.1",
    "@babel/register": "7.0.0-rc.1",
    "babel-loader": "8.0.0-beta.2",
    "babel-polyfill": "6.26.0",
    "babel-preset-es2015": "6.24.1",
    "babel-preset-power-assert": "2.0.0",
    "babel-register": "6.26.0",
    "eslint": "4.19.1",
    "flow-bin": "^0.72.0",
    "flow-typed": "^2.4.0",
    "flowtype": "^2.0.0",
    "immutable": "4.0.0-rc.9",
    "mocha": "5.1.1",
    "nock": "9.2.5",
    "normalizr": "3.2.4",
    "power-assert": "1.5.0",
    "prop-types": "15.6.1",
    "react-immutable-proptypes": "2.1.0",
    "redux": "4.0.0",
    "redux-actions": "2.3.2",
    "serve": "6.5.6",
    "sinon": "5.0.7",
    "swagger": "0.7.5",
    "webpack": "4.8.1",
    "webpack-cli": "2.1.3"
  },
  "peerDependencies": {
    "immutable": "4.0.0-rc.9",
    "lodash": "4.17.10",
    "normalizr": "3.2.4",
    "redux": "4.0.0",
    "redux-actions": "2.3.2"
  },
  "files": [
    "config",
    "src",
    "dist",
    "templates",
    "examples",
    "bin",
    "README.md",
    "package.json"
  ],
  "keywords": [
    "generator",
    "open api",
    "swagger"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "repository": "eightcard/openapi-to-normalizr",
  "scripts": {
    "build:dist": "yarn eslint && yarn test && babel -d dist --env-name=development src/lib/**/*[^test].js",
    "build:sample": "webpack --config examples/webpack.config.babel.js --progress",
    "build:sample:models": "./bin/generatemodels --config examples/config/config.models.js",
    "build:sample:schemas": "./bin/generateschemas --config examples/config/config.schemas.js",
    "eslint": "eslint src bin",
    "mocha": "NODE_ENV=test mocha --require babel-register ",
    "mock": "swagger project start examples/petstore",
    "prepare:mock": "cd examples/petstore && yarn",
    "serve": "bin/serve `pwd`/examples ",
    "test": "NODE_ENV=test mocha --require babel-register src/lib/**/*.test.js",
    "flow": "flow tmp"
  }
}
